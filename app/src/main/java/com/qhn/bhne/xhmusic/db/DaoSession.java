package com.qhn.bhne.xhmusic.db;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.qhn.bhne.xhmusic.mvp.entity.db.FolderInfo;
import com.qhn.bhne.xhmusic.mvp.entity.db.HistorySearch;
import com.qhn.bhne.xhmusic.mvp.entity.db.UserMusicInfo;
import com.qhn.bhne.xhmusic.mvp.entity.db.SongInfo;
import com.qhn.bhne.xhmusic.mvp.entity.db.ArtistInfo;
import com.qhn.bhne.xhmusic.mvp.entity.db.SongMenuIntro;

import com.qhn.bhne.xhmusic.db.FolderInfoDao;
import com.qhn.bhne.xhmusic.db.HistorySearchDao;
import com.qhn.bhne.xhmusic.db.UserMusicInfoDao;
import com.qhn.bhne.xhmusic.db.SongInfoDao;
import com.qhn.bhne.xhmusic.db.ArtistInfoDao;
import com.qhn.bhne.xhmusic.db.SongMenuIntroDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig folderInfoDaoConfig;
    private final DaoConfig historySearchDaoConfig;
    private final DaoConfig userMusicInfoDaoConfig;
    private final DaoConfig songInfoDaoConfig;
    private final DaoConfig artistInfoDaoConfig;
    private final DaoConfig songMenuIntroDaoConfig;

    private final FolderInfoDao folderInfoDao;
    private final HistorySearchDao historySearchDao;
    private final UserMusicInfoDao userMusicInfoDao;
    private final SongInfoDao songInfoDao;
    private final ArtistInfoDao artistInfoDao;
    private final SongMenuIntroDao songMenuIntroDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        folderInfoDaoConfig = daoConfigMap.get(FolderInfoDao.class).clone();
        folderInfoDaoConfig.initIdentityScope(type);

        historySearchDaoConfig = daoConfigMap.get(HistorySearchDao.class).clone();
        historySearchDaoConfig.initIdentityScope(type);

        userMusicInfoDaoConfig = daoConfigMap.get(UserMusicInfoDao.class).clone();
        userMusicInfoDaoConfig.initIdentityScope(type);

        songInfoDaoConfig = daoConfigMap.get(SongInfoDao.class).clone();
        songInfoDaoConfig.initIdentityScope(type);

        artistInfoDaoConfig = daoConfigMap.get(ArtistInfoDao.class).clone();
        artistInfoDaoConfig.initIdentityScope(type);

        songMenuIntroDaoConfig = daoConfigMap.get(SongMenuIntroDao.class).clone();
        songMenuIntroDaoConfig.initIdentityScope(type);

        folderInfoDao = new FolderInfoDao(folderInfoDaoConfig, this);
        historySearchDao = new HistorySearchDao(historySearchDaoConfig, this);
        userMusicInfoDao = new UserMusicInfoDao(userMusicInfoDaoConfig, this);
        songInfoDao = new SongInfoDao(songInfoDaoConfig, this);
        artistInfoDao = new ArtistInfoDao(artistInfoDaoConfig, this);
        songMenuIntroDao = new SongMenuIntroDao(songMenuIntroDaoConfig, this);

        registerDao(FolderInfo.class, folderInfoDao);
        registerDao(HistorySearch.class, historySearchDao);
        registerDao(UserMusicInfo.class, userMusicInfoDao);
        registerDao(SongInfo.class, songInfoDao);
        registerDao(ArtistInfo.class, artistInfoDao);
        registerDao(SongMenuIntro.class, songMenuIntroDao);
    }
    
    public void clear() {
        folderInfoDaoConfig.clearIdentityScope();
        historySearchDaoConfig.clearIdentityScope();
        userMusicInfoDaoConfig.clearIdentityScope();
        songInfoDaoConfig.clearIdentityScope();
        artistInfoDaoConfig.clearIdentityScope();
        songMenuIntroDaoConfig.clearIdentityScope();
    }

    public FolderInfoDao getFolderInfoDao() {
        return folderInfoDao;
    }

    public HistorySearchDao getHistorySearchDao() {
        return historySearchDao;
    }

    public UserMusicInfoDao getUserMusicInfoDao() {
        return userMusicInfoDao;
    }

    public SongInfoDao getSongInfoDao() {
        return songInfoDao;
    }

    public ArtistInfoDao getArtistInfoDao() {
        return artistInfoDao;
    }

    public SongMenuIntroDao getSongMenuIntroDao() {
        return songMenuIntroDao;
    }

}
